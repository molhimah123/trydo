name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  NODE_VERSION: '18'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watchAll=false

      - name: Set environment variables
        run: |
          if [ -n "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> $GITHUB_ENV
          else
            echo "NEXT_PUBLIC_SUPABASE_URL=https://placeholder.supabase.co" >> $GITHUB_ENV
          fi
          
          if [ -n "${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" ]; then
            echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV
          else
            echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=placeholder-key" >> $GITHUB_ENV
          fi

      - name: Build application
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
          else
            TAG_NAME=${{ github.event.inputs.version }}
          fi
          
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Generate changelog from git commits
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --max-count=10)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag_name }}
          name: Release ${{ steps.changelog.outputs.tag_name }}
          body: |
            ## Changes in this release
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ```bash
            npm install
            npm run build
            npm start
            ```
            
            ## Deployment
            
            This release is automatically deployed to production via Vercel.
          draft: false
          prerelease: false

      - name: Deploy to Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
        continue-on-error: true

      - name: Notify deployment
        run: |
          echo "ðŸš€ Release ${{ steps.changelog.outputs.tag_name }} deployed to production!"
          echo "ðŸ“‹ Release notes: https://github.com/${{ github.repository }}/releases/tag/${{ steps.changelog.outputs.tag_name }}"
